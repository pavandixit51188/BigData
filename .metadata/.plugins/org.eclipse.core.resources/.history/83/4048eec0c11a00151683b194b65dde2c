import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.MultipleInputs;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;


public class EntityDriver extends Configured implements Tool{

	public static void main(String[] args) throws Exception {

		int exitCode = ToolRunner.run(new Configuration(), new EntityDriver(), args);
		System.exit(exitCode);
	}

	@Override
	public int run(String[] arg0) throws Exception {
		Configuration conf = getConf();
		
		Job job = new Job(conf, "Entity Driver Join");
		
		job.setJarByClass(EntityDriver.class);
		
		MultipleInputs.addInputPath(job, new Path(arg0[0]), TextInputFormat.class, EntityMapper1.class);
		MultipleInputs.addInputPath(job, new Path(arg0[1]), TextInputFormat.class, EntityMapper2.class);
		
		job.setReducerClass(EntityReducer1.class);
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(Text.class);
		
		FileOutputFormat.setOutputPath(job, new Path(arg0[2]));
		//return (job.waitForCompletion(true) ? 0:1);
		job.waitForCompletion(true);
		
		Configuration conf2 = getConf();
		Job job2 = new Job(conf2, "Entity Driver Chaining");
		
		job.setJarByClass(EntityDriver.class);
	}

}
