import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.Reducer.Context;


public class EntityReducer3 extends Reducer<FloatWritable, Text, Text, FloatWritable>{

	private static final TreeMap<Float, Text> top10Map = new TreeMap<Float, Text>();
	
	public void reduce(FloatWritable key, Text value, Context context){
		
						
		if(top10Map.size() > 10){
			top10Map.remove(top10Map.firstKey());
			//context.write(new Text("Pavan items are getting removed: "), new FloatWritable(counter));
		}else{
			top10Map.put(new Float(key.toString()), value);
		}
		
	}
	
	protected void cleanup(Context context) throws IOException, InterruptedException{
		int counter = 0;
		for (Float k : top10Map.descendingKeySet()) {
			Text lst = top10Map.get(k);
			
			if(counter > 10)
			}
			else{
				
			}
			
	}
}
